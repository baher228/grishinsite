networks:
  dev: {}

services:
  frontend:
    build:
      context: ./affera
    ports:
      - "3000:3000"
    networks:
      - dev

  backend:
    build:
      context: ./backend
    environment:
      DATABASE_URL: postgresql://postgres:bochka@postgres:5432/affera?schema=public
      NODE_ENV: production
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: grpod44
      JWT_SECRET: 07e57407a3fd4c600abe73d1bba82eac736156e0c0b7fb8976911d6f5e0d40a86679629a50d1f62933a8e1172e48af710ff326dfb67e6fb0c9804973be4a0b5e
    depends_on:
      - postgres
    ports:
      - "4200:4200"
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - dev

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bochka
      POSTGRES_DB: affera
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dev

volumes:
  postgres_data:

